basePath: /
definitions:
  controllers.CreateUserRequest:
    properties:
      cc:
        items:
          type: integer
        type: array
      password:
        type: string
      rut:
        type: string
      username:
        type: string
    type: object
  models.CC:
    properties:
      id:
        type: string
      jefe:
        type: string
      nombre:
        type: string
      numero:
        type: integer
    type: object
  models.Line:
    properties:
      cantidad:
        type: integer
      comentario:
        type: string
      importe_linea:
        type: number
      numero_linea:
        type: integer
      product_id:
        type: string
      um:
        type: string
    type: object
  models.Product:
    properties:
      UM:
        type: string
      categoria:
        type: string
      convenio_marco:
        type: string
      descripcion:
        type: string
      fecha_actualizacion:
        type: string
      id:
        type: string
      id_categoria:
        type: string
      id_convenio:
        type: string
      id_product:
        type: string
      licitacion:
        type: string
      marca:
        type: string
      modelo:
        type: string
      nombre_proveedor:
        type: string
      number:
        type: string
      precio:
        type: number
      region:
        type: string
      rut_proveedor:
        type: string
    type: object
  models.Role:
    enum:
    - Usuario
    - Administrador
    type: string
    x-enum-varnames:
    - USER
    - ADMIN
  models.Solicitud:
    properties:
      aprobador:
        type: string
      cc:
        type: string
      description:
        type: string
      documents:
        items:
          type: string
        type: array
      fecha_contable:
        type: string
      fecha_solicitud:
        type: string
      id:
        type: string
      importe_total:
        type: number
      lines:
        items:
          $ref: '#/definitions/models.Line'
        type: array
      moneda:
        type: string
      nombre_solicitud:
        type: string
      solicitante:
        type: string
      state:
        type: string
    type: object
  models.User:
    properties:
      _id:
        type: string
      cc:
        items:
          type: string
        type: array
      created_at:
        type: string
      email:
        type: string
      role:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      rut:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API documentation for the Catalogo service.
  title: Catalogo API
  version: "1.0"
paths:
  /archivos/{filepath}:
    get:
      description: Serves files from the uploads directory in a safe manner
      parameters:
      - description: File path
        in: path
        name: filepath
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Serve uploaded file
      tags:
      - files
  /cc/:
    get:
      description: Returns all Centros de Costo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CC'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List centros de costo
      tags:
      - cc
    post:
      consumes:
      - application/json
      description: Creates a new Centro de Costo
      parameters:
      - description: Centro de Costo info
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.CC'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create centro de costo
      tags:
      - cc
  /cc/{id}:
    delete:
      description: Deletes a Centro de Costo by ID
      parameters:
      - description: Centro de Costo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete centro de costo
      tags:
      - cc
    get:
      consumes:
      - application/json
      description: Returns a Centro de Costo by its ID
      parameters:
      - description: Centro de Costo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CC'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get centro de costo by ID
      tags:
      - cc
    put:
      consumes:
      - application/json
      description: Updates a Centro de Costo by ID
      parameters:
      - description: Centro de Costo ID
        in: path
        name: id
        required: true
        type: string
      - description: Update data
        in: body
        name: payload
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update centro de costo
      tags:
      - cc
  /product/:
    get:
      description: Returns all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Creates a new product with the provided information
      parameters:
      - description: Product info
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create product
      tags:
      - products
  /product/paginated:
    get:
      description: Returns paginated products
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List products paginated
      tags:
      - products
  /solicitud/:
    get:
      description: Returns solicitudes paginated
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List solicitudes paginated
      tags:
      - solicitudes
    post:
      consumes:
      - multipart/form-data
      description: Creates a new solicitud with optional files
      parameters:
      - description: Solicitud JSON
        in: formData
        name: solicitud
        required: true
        type: string
      - description: Attached files
        in: formData
        name: archivos
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create solicitud
      tags:
      - solicitudes
  /solicitud/{id}:
    delete:
      description: Deletes a solicitud by ID
      parameters:
      - description: Solicitud ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete solicitud
      tags:
      - solicitudes
    get:
      description: Returns a solicitud by its ID
      parameters:
      - description: Solicitud ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Solicitud'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get solicitud by ID
      tags:
      - solicitudes
    put:
      consumes:
      - application/json
      description: Updates an existing solicitud
      parameters:
      - description: Solicitud ID
        in: path
        name: id
        required: true
        type: string
      - description: Update data
        in: body
        name: payload
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update solicitud
      tags:
      - solicitudes
  /solicitud/aprobar:
    get:
      description: Returns solicitudes for approval filtered by supervisor
      parameters:
      - description: User ID
        in: query
        name: userId
        required: true
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      - description: State
        in: query
        name: state
        type: string
      - description: Solicitud ID
        in: query
        name: id
        type: string
      - description: Centro de costo
        in: query
        name: cc
        type: string
      - description: Fecha inicio
        in: query
        name: fechaInicio
        type: string
      - description: Fecha fin
        in: query
        name: fechaFin
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: List solicitudes to approve
      tags:
      - solicitudes
  /solicitud/filtradas:
    get:
      description: Returns solicitudes using filters and pagination
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      - description: State
        in: query
        name: state
        type: string
      - description: Solicitud ID
        in: query
        name: id
        type: string
      - description: Fecha inicio
        in: query
        name: fechaInicio
        type: string
      - description: Fecha fin
        in: query
        name: fechaFin
        type: string
      - collectionFormat: csv
        description: Centros de costo
        in: query
        items:
          type: string
        name: ccs
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List solicitudes filtered paginated
      tags:
      - solicitudes
  /user/:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Creates a new user after validating credentials
      parameters:
      - description: User info
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Register new user
      tags:
      - users
  /user/{email}:
    delete:
      parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Delete user
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      - description: User info
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Update user
      tags:
      - users
  /user/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get user by ID
      tags:
      - users
  /user/by-cc:
    post:
      consumes:
      - application/json
      parameters:
      - description: CC IDs
        in: body
        name: body
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get users by centros de costo
      tags:
      - users
  /user/email/{email}:
    get:
      parameters:
      - description: User email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get user by email
      tags:
      - users
swagger: "2.0"
